include(ExternalProject)
set(ONNC_UMBRELLA_EXTERNAL_PATH ${ONNC_UMBRELLA_PATH}/external)

####################
# onnx

find_package(onnx)
if(EXTERNAL_BUILD_ALWAYS OR ONNX_SOURCE_DIR OR NOT ONNX_INCLUDE_DIR OR NOT ONNX_LIBRARIES)
    if(NOT ONNX_SOURCE_DIR)
        set(ONNX_SOURCE_DIR ${ONNC_UMBRELLA_EXTERNAL_PATH}/onnx CACHE PATH "onnx source path")
    endif(NOT ONNX_SOURCE_DIR)
    # Build & install onnx
    ExternalProject_Add(Ext_project_onnx
        PREFIX onnx
        DOWNLOAD_COMMAND git submodule update --recursive ${ONNX_SOURCE_DIR}
        SOURCE_DIR ${ONNX_SOURCE_DIR}
        CMAKE_ARGS -DCMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE} -DCMAKE_INSTALL_PREFIX=${CMAKE_INSTALL_PREFIX}
        BUILD_ALWAYS ${EXTERNAL_BUILD_ALWAYS}
        BUILD_IN_SOURCE ${EXTERNAL_BUILD_IN_SOURCE}
    )
    # Set include directory
    set(ONNX_INCLUDE_DIR ${CMAKE_INSTALL_PREFIX}/include)
    # Set lib directory
    set(ONNX_LIBRARIES ${CMAKE_INSTALL_PREFIX}/lib)
endif(EXTERNAL_BUILD_ALWAYS OR ONNX_SOURCE_DIR OR NOT ONNX_INCLUDE_DIR OR NOT ONNX_LIBRARIES)

####################
# SkyPat

find_package(SkyPat)
if(EXTERNAL_BUILD_ALWAYS OR SKYPAT_SOURCE_DIR OR NOT SKYPAT_INCLUDE_DIR OR NOT SKYPAT_LIBRARIES)
    if(NOT SKYPAT_SOURCE_DIR)
        set(SKYPAT_SOURCE_DIR ${ONNC_UMBRELLA_EXTERNAL_PATH}/SkyPat CACHE PATH "SkyPat source path")
    endif(NOT SKYPAT_SOURCE_DIR)
    # Build & install skypat
    ExternalProject_Add(Ext_project_skypat
        PREFIX skypat
        DOWNLOAD_COMMAND git submodule update --recursive ${SKYPAT_SOURCE_DIR}
        SOURCE_DIR ${SKYPAT_SOURCE_DIR}
        CONFIGURE_COMMAND ${SKYPAT_SOURCE_DIR}/configure --prefix=${CMAKE_INSTALL_PREFIX}
        BUILD_ALWAYS ${EXTERNAL_BUILD_ALWAYS}
        BUILD_IN_SOURCE ${EXTERNAL_BUILD_IN_SOURCE}
    )
    # Set include directory
    set(SKYPAT_INCLUDE_DIR ${CMAKE_INSTALL_PREFIX}/include)
    # Set lib directory
    set(SKYPAT_LIBRARIES ${CMAKE_INSTALL_PREFIX}/lib)
endif(EXTERNAL_BUILD_ALWAYS OR SKYPAT_SOURCE_DIR OR NOT SKYPAT_INCLUDE_DIR OR NOT SKYPAT_LIBRARIES)